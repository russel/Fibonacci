module Fibonacci where

exceptionErrorMessage = "Cannot use a negative argument to Fibonacci function."

na誰veRecursive :: Integer -> Integer
na誰veRecursive n
    | n < 0 = error exceptionErrorMessage
    | n == 0 = 0
    | n == 1 = 1
    | n > 1 = na誰veRecursive (n - 1) + na誰veRecursive (n - 2)

tailRecursive :: Integer -> Integer
tailRecursive n
    | n < 0 = error exceptionErrorMessage
    | otherwise = fs n 0 1
    where
      fs 0 result next = result
      fs i result next = fs (i - 1) next (result + next)

lazyList_recursion :: Integer -> Integer
lazyList_recursion n
    | n < 0 = error exceptionErrorMessage
    | otherwise = fibonacciSequence !! fromInteger n
    where
      fibonacciSequence = fs 0 1
          where
            fs a b = a : fs b (a + b)

lazyList_zipWith :: Integer -> Integer
lazyList_zipWith n
    | n < 0 = error exceptionErrorMessage
    | otherwise = fibonacciSequence !! fromInteger n
  where
    fibonacciSequence = 0 : 1 : zipWith (+) fibonacciSequence (tail fibonacciSequence)
